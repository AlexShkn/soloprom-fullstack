@use './variables.scss';

.link-hover {
  transition: color variables.$transition;

  svg {
    transition: fill variables.$transition;
  }
  @media (any-hover: hover) {
    &:hover {
      color: variables.$hoverAccentColor;

      svg {
        fill: variables.$hoverAccentColor;
      }
    }
  }
}

.action-button {
  &.added .icon-wrapper {
    position: relative;

    &::before {
      content: '';
      position: absolute;
      right: -5px;
      bottom: 1px;
      background: url('/img/icons/cheked.svg') center / cover no-repeat;
      width: 15px;
      height: 14px;
    }
    svg {
      fill: variables.$warnColor;
    }

    @media (any-hover: hover) {
      &:hover {
        svg {
          fill: variables.$warnColor;
        }
      }
    }
  }

  @media (any-hover: hover) {
    &:hover {
      svg {
        fill: variables.$hoverAccentColor;
      }
    }
  }

  &.selected {
    fill: variables.$warnColor;
  }
}

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  background-color: variables.$accentColor;
  transition: all 0.3s ease 0s;
  border-radius: 2.25rem;

  &:not(.added) {
    @media (any-hover: hover) {
      &:hover {
        background-color: variables.$hoverAccentColor;
      }
    }
  }
}

.hidden-item {
  visibility: hidden;
  opacity: 0;
  transition:
    visibility 0.3s ease 0s,
    opacity 0.3s ease 0s;
}

.window-close-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 10px;
  margin: -10px;
  background: transparent;
  z-index: 8;
  svg {
    width: 20px;
    height: 20px;
    fill: variables.$mainColor;
    transition: fill 0.3s ease 0s;
  }

  @media (any-hover: hover) {
    &:hover {
      fill: variables.$hoverAccentColor;
    }
  }
}

.section-offset {
  padding: 50px 0;

  @media (max-width: 767.98px) {
    padding: 30px 0;
  }
}

.section-title {
  color: variables.$mainColor;
  font-size: clamp(1.5rem, 1.2363rem + 0.8791vw, 2rem);
  font-weight: 700;
  line-height: 120%;
  margin-bottom: 30px;

  &--white {
    color: #fff;
  }
}

.category-title {
  font-size: clamp(1.375rem, 1.132rem + 1.215vw, 2.1875rem);
}

.ttall {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.showing {
  visibility: visible !important;
  opacity: 1 !important;
}

.load {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    top: -25%;
    left: -25%;
    width: 150%;
    height: 200%;
    backdrop-filter: blur(1px);
    z-index: 30;
  }

  &::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: 31;
    background: url('/img/icons/spinner.svg') center / 40px no-repeat;
    width: 40px;
    height: 40px;
    filter: blur(0);
  }

  &--mini {
    &::before {
      content: '';
      width: 35px;
      height: 35px;
      background: url('/img/icons/spinner.svg') center / 35px no-repeat;
    }
  }
}

._show {
  display: block;
}

.show {
  visibility: visible;
  opacity: 1;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 0;
  clip: rect(0 0 0 0);
}

.header_hidden {
  transform: translateY(-100%);
}

.header.header_hidden {
  transform: translateY(-100%);
  .header-body {
    padding: 15px 0;
  }
}

.big-size-list {
  max-height: calc(100dvh - 250px);
}
.min-size-list {
  max-height: calc(100dvh - 120px);
}

.header-bottom.header_fixed {
  background-color: variables.$mainColor;
  z-index: 10;
  @media (min-width: 767.98px) {
    .mobile-nav__item {
      background: transparent;
      border: 1px solid #fff;

      @media (any-hover: hover) {
        &:hover {
          border-color: variables.$successColor;

          svg {
            fill: variables.$successColor;
          }
        }
      }
    }
  }

  @media (min-width: 767.98px) {
    position: fixed;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
    animation: fadeIn 0.1s ease-in;

    .header-bottom__wrapper {
      padding: 7px;
      // max-width: variables.$maxWidthContainer + px;
      // background-color: #fff;
      box-shadow: variables.$shadow;
      width: 100%;
      margin: 0px auto;
    }

    .catalog-menu {
      width: 100%;
      left: 50%;
      transform: translateX(-50%);
      top: 70px;

      &.menu-show {
        @media (min-width: 991.98px) {
          animation: showFixedMenu 0.3s;
        }
      }
    }
  }
  @media (max-width: 767.98px) {
    .header-mobile-fixed {
      position: fixed;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 100%;
      animation: fadeIn 0.1s ease-in;
      padding: 5px 15px;
      background-color: variables.$mainColor;
      height: auto;
    }
  }
}

.catalog-menu.menu-show {
  @media (min-width: 991.98px) {
    animation: showMenu 0.3s;
  }
  @media (max-width: 991.98px) {
    animation: showMobileMenu 0.3s;
  }
}

@keyframes showMobileMenu {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes showMenu {
  0% {
    transform: translateY(-20);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes showFixedMenu {
  0% {
    transform: translateY(-20) translateX(-50%);
    opacity: 0;
  }

  100% {
    transform: translateY(0) translateX(-50%);
    opacity: 1;
  }
}

.added {
  span {
    visibility: visible;
    opacity: 1;
    z-index: 1;
  }
}

input:-webkit-autofill {
  -webkit-box-shadow: inset 0 0 0 50px #fff !important;
}

.modal-show {
  animation: show 0.3s;

  @keyframes show {
    0% {
      transform: scale(0.8);
      opacity: 0;
    }

    100% {
      transform: scale(1);
      opacity: 1;
    }
  }
}
